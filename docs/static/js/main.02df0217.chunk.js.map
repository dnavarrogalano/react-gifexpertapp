{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBG,OACI,sBAAMC,SAbS,SAACC,GAEhBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCLhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UAAUH,GAD1C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAajBM,GAbiB,4CAAH,sDCATO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGxB,ECN0B,SAACA,GAErB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAGPxB,EAASC,GACJwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKrB,CAACpB,IAEGqB,EDfoBK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAIIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEfrBgB,EAAe,WAC1B,MAAoCzC,mBAAS,CAC3C,cADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACG2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEjB,aADA,CACC,EAAD,CAEAA,SAAUA,GADLA,YClBrB6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.02df0217.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault();\r\n        //console.log('submit');\r\n        if(inputValue.trim().length > 2 )\r\n        {\r\n            setCategories( cats =>[inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\n  export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=WP0kegKmVRqYQHKuU601FH3rSXJcqIIi`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    });\r\n\r\n return gifs;\r\n\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.table(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n//   const [images, setImages] = useState([]);\r\n  const { data:images, loading} =  useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">loading....</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n          // images.map( gif =>\r\n          // <li key={ gif.id }>{ gif.title }<img src={gif.url}></img></li>\r\n          images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))\r\n        }\r\n       \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true\r\n        });\r\n\r\n        useEffect( () => {\r\n\r\n            \r\n            getGifs( category )\r\n                .then(imgs=>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                });\r\n          \r\n\r\n        }, [category])\r\n\r\n        return state; //{data[], loading :true}\r\n}","import React , {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n    \"One Punch\",\r\n  ]);\r\n  // const handleAdd = ()=>{\r\n  //       //setCategories([...categories, 'Naruto']);\r\n  //       setCategories(cats => [...cats , 'Naruto']);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertAPP</h2>\r\n      <AddCategory setCategories={ setCategories}/>\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        {categories.map( category=>\r\n                //category =><li key={category}>{category}</li>\r\n                <GifGrid \r\n                key={category}\r\n                category={category} />\r\n                )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n//const divRoot =     document.getElementById('root');\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n    \n);\n\n"],"sourceRoot":""}